/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------
            // | ESC | 1 | 2 | 3 | 4 | 5 | 6 | 7  | 8  | 9 | 0 | - | = |    BSPC  | ` |
            // |   TAB  | Q | W | E | R | T | Y | U | I | O | P | [ | ] |  \    | DEL |
            // |    CAPS  | A | S | D | F | G | H | J | K | L | ; | ' | ENTER  | PGUP |
            // |     SHIFT | Z | X | C | V | B | N | M | , | . | / |   RSHIFT    |PGDN|
            // | LCTL | LGUI | LALT |       SPACE      | RALT |FUNC |RCTL |LEFT |BT_layer|

            bindings = <
                &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9  &kp N0  &kp MINUS &kp EQUAL &kp BSPC &kp GRAVE
                &kp TAB  &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp LBKT &kp RBKT &kp BSLH &kp DEL
                &kp CAPS  &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp SQT &kp RET &kp PG_UP
                &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B &kp N  &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT &kp UP &kp PG_DN
                &kp LCTRL &kp LGUI &kp LALT &kp SPACE &kp RALT &mo 1  &kp RCTRL &kp RGUI &mo 2
            >;
        };

        func_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | NA | F1 | F2 | F3 |  F4 | F5 | F6 |  F7 | F8 | F9 |  F10 | F11 | F12 | NA  | bootloader |
            // |  NA  | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA |  NA    | NA |
            // |    NA  | NA | NA | NA | NA | NA | NA | NA | NA | NA | ; | ' | NA  | NA |
            // |     NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA |
            // | NA | NA | NA |       NA      |NA|NA|NA|NA|NA|
            bindings = <
                &none  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &none &none
                &none  &none &none &none &none &none &none &none &none &none   &none     &none &none &none &none
                &out OUT_BLE  &out OUT_USB &none &none &none &none &none &none &none &none &none &none &none &none
                &none  &none &none &none &none &none &none &none &none &none &none &none &none
                &none &none &none &none &none &none &none &none &none
            >;
        };

        bt_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BT_CLEAR | BT_SEL 0 | BT_SEL 1 | BT_SEL 2 | BT_SEL 3 | BT_SEL 4 | NA | NA  | NA | NA | NA | NA | NA | NA  | bootloader |
            // |  NA  | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA |  NA    | NA |
            // |    NA  | NA | NA | NA | NA | NA | NA | NA | NA | NA | ; | ' | NA  | NA |
            // |     NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA | NA |
            // | NA | NA | NA |       NA      |NA|NA|NA|NA|NA|
            bindings = <
                &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none &none &none &none  &none  &none &none &none &bootloader
                &none  &none &none &none &none &none &none &none &none &none   &none     &none &none &none &none
                &out OUT_BLE  &out OUT_USB &none &none &none &none &none &none &none &none &none &none &none &none
                &none  &none &none &none &none &none &none &none &none &none &none &none &none
                &none &none &none &none &none &none &none &none &none
            >;
        };
    };
};
